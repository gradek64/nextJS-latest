name: Reusable Build
on:
  workflow_call:
    inputs:
      app-name:
        description: 'The app name to use for the build step and the image'
        default: 'gm-basket-wishlist-ui'
        type: string
      bosun-config:
        description: 'The path to the bosun config file'
        required: true
        type: string
      image-tags:
        description: 'Comma separated list of tags to be be applied to the image.'
        default: ''
        type: string
      branch:
        description: 'The branch to checkout'
        default: ''
        type: string
    outputs:
      tags:
        description: 'The image tag to pass to the deploy job.'
        value: ${{ jobs.build.outputs.short-sha }}
jobs:
  build:
    runs-on:
      - self-hosted
      - build
    steps:
      - run: echo "image-tags=${{ inputs.image-tags }}"
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch != '' && inputs.branch || github.ref }}
      - uses: sainsburys-tech/bosun-actions-setup@v1
        id: setup
        with:
          app-name: ${{ inputs.app-name }}
          config-path: ${{ inputs.bosun-config }}
          job-name: 'build / build'
          tags: ${{ inputs.image-tags }}
          # Ensures the "Post Setup" step tags the currently built SHA
          tag-ref-on-build: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image
        # Prevents overwriting immutable images if they already exist
        # Reference: https://bosun-docs-user.int.prd.jspaas.uk/docs/build-deploy/github-actions-tips/#re-pushing-images-to-immutable-ecrs
        if: ${{ steps.setup.outputs.imageExists == 'false' }}
        id: build
        uses: docker/build-push-action@v5
        with:
          tags: ${{ fromJson(steps.setup.outputs.dockerParams).tags }}
          push: false
          file: ./Dockerfile
          target: builder
          secrets: |
            "GITHUB_PACKAGES_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}"
      - name: Push docker image
        if: ${{ steps.setup.outputs.imageExists == 'false' }}
        id: push
        uses: docker/build-push-action@v5
        with:
          tags: ${{ fromJson(steps.setup.outputs.dockerParams).tags }}
          push: true
          file: ./Dockerfile
          target: runtime
          secrets: |
            "GITHUB_PACKAGES_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}"
      - id: argos
        run: echo "imageTags=${{ fromJson(steps.setup.outputs.buildInfo).shortTag }}" >> $GITHUB_OUTPUT
    outputs:
      short-sha: ${{ steps.argos.outputs.imageTags }}